var steps=0,stepper=0;function setSteps(a){steps=a;stepper=100/steps}function setStep(a){"undefined"!=typeof tinyMCE&&tinyMCE.triggerSave();100==stepper*a?$(".progress-bar").addClass("progress-bar-complete"):$(".progress-bar").removeClass("progress-bar-complete");$(".progress-bar").css("width",stepper*a+"%");$(".step").hide();$("#step-"+a).show()}function nextStep(a){0==errors.length?(setStep(a+1),clearErrors()):displayErrors()}
function validateStep(a){clearErrors();switch(a){case 1:nextStep(1);break;case 2:validateTitle($("#confirmed-title"));validateShortDescription($("#confirmed-short-description"));validateFullDescription($("#confirmed-description"));validateStartDate($("#confirmed-startdate"),$("#confirmed-starttime"));validateEndDate($("#confirmed-enddate"),$("#confirmed-startdate"),$("#confirmed-starttime"),$("#confirmed-endtime"));nextStep(2);break;case 3:nextStep(3);break;case 4:validatePackageSize($("#min-units").val(),
$("#max-units").val(),$("#package-size").val());validateMaxPlaces($("#max-units").val());validateTaxRate($("#tax-rate"));validatePricePerUnit($("#price-per-unit"));validateMinPlaces($("#min-units"));validateCostPerUnit($("#cost-per-unit"));validateCostToDeliver($("#cost-to-deliver"));validateMarketValue($("#market-value"));nextStep(4);break;case 8:$("#create-btn").prop("disabled",!0),$("#create-btn").html("Saving..."),$.when(editEvent(eventId)).then(function(a){$("#create-btn").prop("disabled",!1);
nextStep(8)})}}function editEvent(a){loader(!0);return $.ajax({url:"/itemcreation/ajaxEditArranged/"+a,type:"post",dataType:"json",cache:!1,data:$("#item-creation-form").serialize()})}function validateTitle(a){a=a.val().length;(5>a||100<a)&&errors.push("The title must be between 5 and 100 characters")}function validateShortDescription(a){a=a.val().length;(5>a||300<a)&&errors.push("The short description must be between 5 and 300 characters")}
function validateFullDescription(a){tinyMCE.triggerSave();a=a.val().length;(5>a||1E4<a)&&errors.push("The description must be greater than 5 characters")}
function validateStartDate(a,c){if(""!=a.val()||""!=c.val()){/^(2[0-3]|1[0-9]|0[0-9]|[^0-9][0-9]):([0-5][0-9]|[0-9])$/.test(c.val())||errors.push("The event start time is not valid, 24 hour format is required e.g. 09:00 or 23:00");var b=new moment(a.val()+" "+c.val(),"DD/MM/YYYY HH:mm");if(b.isValid()){var d=new moment;b.isBefore(d,"day")&&errors.push("Start date cannot be in the past")}else errors.push("You must provide a valid start date")}}
function validateEndDate(a,c,b,d){if(""!=a.val()||""!=d.val())/^(2[0-3]|1[0-9]|0[0-9]|[^0-9][0-9]):([0-5][0-9]|[0-9])$/.test(d.val())||errors.push("The event end time is not valid, 24 hour format is required e.g. 09:00 or 23:00"),a=new moment(a.val()+" "+d.val(),"DD/MM/YYYY HH:mm"),c=new moment(c.val()+" "+b.val(),"DD/MM/YYYY HH:mm"),a.isValid()&&c.isValid()?a.isBefore(c,"minute")&&errors.push("End date cannot be before the start date"):errors.push("You must provide a valid starat and end date")}
function validateBookingStartDate(a,c){var b=new moment(a.val(),"DD/MM/YYYY"),d=new moment(c.val(),"DD/MM/YYYY");b.isValid()?b.isAfter(d,"day")&&errors.push("The booking start date must be before the booking end date"):errors.push("You must provide a valid booking start date")}
function validateBookingEndDate(a,c){var b=new moment(a.val(),"DD/MM/YYYY"),d=new moment(c.val(),"DD/MM/YYYY");d.isValid()?d.isBefore(b,"day")&&errors.push("The booking end date must be after the booking start date"):errors.push("You must provide a valid booking end date")}function validateAddress(a){""==a.val()&&errors.push("Please select an address")}function validateMinPlaces(a){""!=a.val()&&(0!=a.val()%1||isNaN(a.val())||""==a.val())&&errors.push("Minimum Spaces must be a whole number")}
function validateMaxPlaces(a){""!=a&&(isNaN(a)||""==a||1>a?errors.push("Number of Packages must be a whole number and greater than 0"):0!=a%1&&errors.push("Number of Packages must be a whole number"))}function validatePackageSize(a,c,b){""!=b&&(isNaN(b)||""==b||1>b?errors.push("Spaces per Package must be a whole number and greater than 0"):0!=b%1&&errors.push("Spaces per Package must be a whole number"))}
function validatePricePerUnit(a){isNaN(a.val())?errors.push("The Price per Package must be a number"):0<a.val()&&.5>a.val()&&errors.push("The Price per Package must be 0 or higher than 0.50")}function validateCostPerUnit(a){""!=a.val()&&isNaN(a.val())&&errors.push("The Cost per Attendee must be a number")}function validateCostToDeliver(a){""!=a.val()&&isNaN(a.val())&&errors.push("The Static Costs must be a number")}
function validateMarketValue(a){""!=a.val()&&isNaN(a.val())&&errors.push("The Compliance Value must be a number")}function validateTaxRate(a){""!=a.val()&&(/^((0|[1-9]\d?)(\.\d{1,2})?|100(\.000?)?)$/.test(a.val())||errors.push("Tax rate must be a valid percentage between 0 and 100"))};
